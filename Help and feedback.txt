from unittest import expectedFailure
import pytest
import string
import getpass
from playwright.sync_api import Page, Playwright
from test_commonmethod import test_open_page_sso,test_create_ppe_codespace,test_createAndinstall
from test_delete_codespace import test_deleteAllCodespace 

@pytest.mark.daily
@pytest.mark.checkline1
def test_delete_all_codespaces(playwright: Playwright):
    test_deleteAllCodespace(playwright)
@pytest.mark.daily
@pytest.mark.checkline
def test_HelpAndFeedback(playwright: Playwright):
    tempurl="https://github.com/codespaces"
    page=test_open_page_sso(playwright, tempurl)
    try:
        page.context.pages[-2].close()
        page.get_by_role("button", name="Codespace configuration").nth(0).click()
        page.get_by_role("menuitem", name="Open in ...").click()
        page.get_by_role("menuitem", name="Open in browser").click()
        page.wait_for_timeout(60000)
        page.keyboard.press("Control+Shift+P")
        page.wait_for_timeout(1500)
        page.keyboard.type("Codespaces: Details")
        page.keyboard.press("ArrowDown")
        page.keyboard.press("Enter")
        page.wait_for_timeout(1500)
        page.keyboard.press("Control+Shift+P")
        page.keyboard.type("Remote Explorer: Focus on Help and feedback View")
        page.keyboard.press("ArrowDown")
        page.keyboard.press("Enter")
        page.wait_for_timeout(2500)
        page.get_by_role("treeitem", name="Get Started").click()
        page.wait_for_timeout(5000)
        expectedFailure(page).to_have_title("Developing in a codespace")
        page.go_back()
        page.get_by_role("treeitem", name="Read Documentation").click()
        page.wait_for_timeout(2500)
        assert "GitHub Codespaces Documentation" in page.text_content("h1")
        page.close()
        page.get_by_role("treeitem", name="Review Issues").click()
        page.wait_for_timeout(2500)
        assert "Start a new discussion" in page.text_content("h1")
        page.close()
        page.get_by_role("treeitem", name="Report Issue").click()
        page.wait_for_timeout(2500)
        assert "Start a new discussion" in page.text_content("h1")
        page.close()
     
    finally:
        page.close()


